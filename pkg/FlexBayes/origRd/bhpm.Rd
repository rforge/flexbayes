\name{bhpm}
\alias{bhpm}
\title{
  Bayesian Hierarchical Poisson Mixed Effects Model
}
\description{
Fit Bayesian hierarchical Poisson mixed effects regression models.
 The models can optionally include overdispersion, and are written:

\code{    for j = 1, ..., J: the group index}

\code{    and i = 1, ..., n_j: the index for observations within group j,}
 
 \bold{No overdispersion case.}

\code{    counts_ij ~ Poisson( e_ij * lambda_ij ) }

\code{    log( lambda_ij ) = X_ij beta_j + M_ij gamma } \bold{:the link function}

\code{    beta_j = Z_j alpha + u_j   } \bold{:the random effects} 

\code{    gamma ~ p( gamma )} \bold{:the fixed effects}

\code{    alpha ~ p( alpha )} \bold{:the second-level effects}

\code{  u_jk ~ N( 0, tau^2_k )  \bold{OR:}  u_j ~ N( 0, V )  }

\bold{ where}

\code{    counts_ij: data response (count) for the i-th case in the j-th group}

\code{    e_ij: data exposures (with some units, e.g. hours)  }

\code{    X_ij: data predictors for the random effects of the i-th case in the j-th group}

\code{    M_ij: data predictors for the fixed effects of the i-th case in the j-th group}

\code{    Z_j: data predictors for the "population" or second-level effects in the j-th group}

\code{  The tau^2_k are given univariate priors or V is given an inverse Wishart prior.
  See \code{\link{bhpm.prior}} for details.}

\code{    The distribution p( gamma ) can be equal to N( gamma_0, V1_0 ) or t( df, gamma_0, V1_0 ), or 
  it can be flat (improper).  The same holds for p( alpha ). }


 \bold{Gamma conjugate overdispersion.}

\code{    counts_ij ~ Poisson( e_ij * lambda_ij ) }

\code{    lambda_ij ~ Gamma( xi_j, (xi_j / mu_ij) )}

\code{    log( mu_ij ) = X_ij beta_j + M_ij gamma }

\code{    xi_j ~ Uniform Shrinkage( xi_0 )}

    and the rest of the hierarchy is as given above.


\bold{Log-normal overdispersion.}

\code{     counts_ij ~ Poisson( e_ij * lambda_ij )}

\code{     lambda_ij ~ log-Normal( mu_ij, sigma2_j )}

\code{     mu_ij = X_ij beta_j + M_ij gamma      }

\code{     sigma2_j ~ p( sigma2_j): could be common for all groups; or known, etc.  }

   and the rest of the hierarchy is as given above.


}
\usage{
bhpm( exposure.formula=NULL, random.formula=NULL, 
  fixed.formula=NULL, level2.formula=NULL, 
  group.formula=NULL, data, 
  overdispersion="none", 
  prior=NULL, sampler=bhpm.sampler(), 
  random.seed=.Random.seed, na.action=na.fail, 
  contrasts=NULL )
}
\arguments{
\item{data}{
an object of class \code{data.frame} specifying the data.
}
\item{exposure.formula }{
an object of class \code{formula} specifying the exposure variable. This
variable should contain the number of units of exposure (e.g. hours, days, etc.).
If omitted, the exposures are assumed to be equal to one unity.
}
\item{random.formula }{
an object of class \code{formula} specifying the random effects predictors
and optionally the outcome (counts) variable.  For instance,
\code{random.formula = Y ~ X1 + X2 - 1}
 indicates that the random effects predictors
are \code{X1} and \code{X2},
 that the intercept is not to be considered as a random effect, and that \code{Y} is 
 the outcome variable.  The outcome variable may be omitted, but then 
 it must be specified in \code{fixed.formula}.
}
\item{fixed.formula }{
an object of class \code{formula} specifying the fixed effects predictors
and optionally the outcome (counts) variable.  For instance,
\code{fixed.formula = Y ~ M1}, indicates that the intercept 
and \code{M1} are considered fixed effects predictors,
and that \code{Y} is the outcome variable.  The outcome variable may be omitted, but then 
 it must be specified in \code{random.formula}.
}
\item{level2.formula }{
an object of class \code{formula}
 specifying the second level effects predictors. These predictors
are assumed constant within groups, e.g. \code{level2.formula  = ~ 1}
specifies a common 
population mean model.
}
\item{group.formula }{
an object of class \code{formula}
 specifying the variable indicating the groups, e.g.
\code{group.formula = ~ School}
 indicates that the values of \code{School} correspond to 
 the groups, and that all those cases (observations) 
with the same \code{School} values are in the same group.
If \code{group.formula = NULL}, all of the observations
are taken to be in the same group.
}
\item{overdispersion }{
a string indicating whether and which type of overdispersion to use.
Acceptable values are \code{"none"}, \code{"gamma-conj"}, and \code{"log-normal"}.
If \code{ overdispersion = "none"}, then the first model above is fit.
If \code{ overdispersion = "gamma-conj"} or \code{"log-normal"} then the gamma-conjugate 
or log-normal overdispersion is used, respectively, as shown above.
}
\item{prior}{
a list generated by a call to \code{\link{bhpm.prior}}. The default is 
\code{bhpm.prior()} if \code{overdispersion = "none"}, 
is \code{bhpm.prior( xi = bayes.uniformShrinkage(0.5), common.glm = 2 )} if \code{overdispersion = "gamma-conj"} and
is \code{bhpm.prior( sigma2 = bayes.uniformShrinkage(0.5), common.glm = 2 )} if \code{overdispersion = "log-normal"}.
}
\item{sampler}{
a list generated by a call to \code{\link{bhpm.sampler}}. 
This list specifies
the MCMC control parameters such as the number of MCMC chains to be generated 
and the initial values to start the simulations.
}
\item{random.seed }{
an integer specifying the initial seed for the simulations.
}
\item{na.action }{
a flag that tells what to do with missing data. 
The default \code{na.action = na.fail} causes the program to
stop if any missing data is detected.
The other acceptable value of \code{na.action} is
\code{na.omit}.
}
\item{contrasts}{
argument to pass to a \code{model.matrix} call. This is 
relevant when some variables are factors.
}
}
\details{
The posterior distribution of the parameters of the model are estimated via Markov Chain
Monte Carlo simulation (a Metropolis-Hastings sampler is performed).
}
\section{References}{

Gelman, A., J. B. Carlin, H. S. Stern, and D. B. Rubin (2004). \emph{ Bayesian Data Analysis}, 2nd Edition. Boca Raton, Florida: Chapman & Hall.

Christiansen, C. L., and C. N. Morris, "Hierarchical Poisson regression modeling", \emph{J. American Statistical Association}, vol. 92, 438: 618-632, 1997.

Kass, R. E., and D. Steffey, "Approximate Bayesian inference in conditionally independent hierarchical models (parametric empirical Bayes models)", \emph{J. American Statistical Association}, vol. 84, 407: 717-726, 1989.
}
\seealso{
\code{\link{bhpm.prior}},
\code{\link{bhpm.sampler}},
\code{\link{bhbm}}.
}
\examples{

##########################################
# Use bhpm to fit an overdispersed Poisson model to the
# pumps data

xi.prior = bayes.uniformShrinkage (0.5)
coef.prior = bayes.normal( mean = rep(0, 2),
  cov = diag( c(1,1) ) )

pump.prior = bhpm.prior ( xi = xi.prior,
  fixed.coef =  coef.prior, 
  common.glm = 2 )

# Specify the control parameters (burn-in length, 
# etc.) and the initial values for the parameters.  
pump.sampler <- bhpm.sampler( nSamples=1000, nThin= 50, 
  nChains = 1, nBurnin = 1000,
  init.point = "prior", update.cov = 0 ) 

pump.exposure <- ~ e
pump.fixed <- z ~ 1 + x

## call bhpm to fit a gamma-conjugate model
pump.bhpm <- bhpm( fixed.formula = pump.fixed, 
  exposure.formula = pump.exposure, data = pumps, 
  prior = pump.prior, sampler = pump.sampler,
  overdispersion = "gamma-conj" )

# check convergence
autocorr.plot(pump.bhpm)

# summarize the posterior distribution
summary(pump.bhpm)

##########################################
# Use bhpm to fit a hierarchical model to
# the epilepsy data

# Specify the prior
epilepsyPrior <- bhpm.prior ( 
  sigma2 = bayes.invChisq(df = 3, sigma0.sq = 10),
  fixed.coef = bayes.normal( mean = 0, cov = 10 ),
  level2.coef = bayes.normal( mean = rep(0, 5), 
    cov = diag( rep(10, 5) ) ),
  random.var = bayes.invChisq(df = 3, sigma0.sq = 10),
  common.glm = 2 )

# Specify the sampling parameters  
epilepsySampler <- bhpm.sampler( nSamples = 1000,
  nThin = 10 )

# Load the data
data(epilepsy)
# Prepare the data 
nSubj <- dim(epilepsy$y)[1]
base <- log ( epilepsy$baseline / 4 )
epilepsyBhpm <- data.frame( 
  y = as.vector( t( epilepsy$y ) ),
  subj = rep( (1:nSubj), each = 4 ),
  visit4 = rep( epilepsy$visit4, nSubj ),
  base = rep( base, each = 4 ),
  treat = rep( epilepsy$treatment, each = 4 ),
  logAge = rep( log( epilepsy$age ), each = 4 ) )  

# fit the model
fixedEff <- 
  y ~ visit4 - 1
level2Eff <- ~ treat + base + logAge + treat * base
randomEff <- ~ 1
# THIS TAKES A FEW MINUTES
epilepsyPost <- bhpm( data = epilepsyBhpm, 
  fixed.formula = fixedEff, 
  random.formula = randomEff,
  group.formula = ~ subj,
  level2.formula = level2Eff,
  prior = epilepsyPrior,
  sampler = epilepsySampler, 
  overdispersion = "log-normal" )

# perform convergence diagnostics
autocorr.plot(epilepsyPost)

# The convergence diagnostics look good, so 
# summarize the inferences
summary(epilepsyPost)

}
